package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.setting.values.DoubleSetting;
import com.gamesense.api.setting.values.IntegerSetting;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;

/*
* @author hausemasterissue
* @since 1/11/2021
* pasted from noatmc https://github.com/noatmc/timer-but-really-bad/blob/main/TickShift.java
*/

@Module.Declaration(name = "TickShift", category = Category.Exploits)
public class TickShift extends Module {
	
    IntegerSetting ticksVal = registerInteger("Ticks", 18, 1, 100);
    DoubleSetting timer = registerDouble("Timer", 1.8, 1.0, 3.0);
  
    boolean canTimer = false;
    int tick = 0;
  
    public void onEnable() {
        canTimer = false;
        tick = 0;
    }
  
    public void onUpdate() {
        if (tick <= 0)  {
             tick = 0; canTimer = false; mc.timer.tickLength = 50f;           
        }
      
        if (tick > 0 && !isMoving()) {
            tick--;
            mc.timer.tickLength = ((float)(50.0 / timer.getValue()));
        }
      
        if (!isMoving()) {
	    tick++;
	}
        if (tick >= ticksVal.getValue()) {
	    tick = ticksVal.getValue();	
	}
    }


    @Override
    public void onDisable() {
        mc.timer.tickLength = 50.0f;
    }
  
    public static boolean isMoving() {
        return mc.player.motionX > Double.longBitsToDouble(Double.doubleToLongBits(1.9208899197057635E307) ^ 0x7FBB5AB8AD5DB287L) || mc.player.motionX < Double.longBitsToDouble(Double.doubleToLongBits(-4.710141003534489E307) ^ 0x7FD0C4C6CF24C3EFL) || mc.player.motionZ > Double.longBitsToDouble(Double.doubleToLongBits(1.3182290674040571E308) ^ 0x7FE7771B096D7F3FL) || mc.player.motionZ < Double.longBitsToDouble(Double.doubleToLongBits(-7.645656144229753E307) ^ 0x7FDB382D2E04048FL);
    }

}
