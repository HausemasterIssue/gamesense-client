package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.event.events.PacketEvent;
import com.gamesense.api.setting.values.DoubleSetting;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import com.gamesense.api.util.misc.Timer;
import net.minecraft.network.play.client.CPacketKeepAlive;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

/*
* @author hausemasterissue
* @since 15/10/2021
* creds to infernoTM
*/

// @todo rewrite
@Module.Declaration(name = "PingSpoof", category = Category.Exploits)
public class PingSpoof extends Module {
	
	DoubleSetting delay = registerDouble("Delay", 0.2, 0.1, 5.0);
	
	private final Queue<CPacketKeepAlive> packets = new ConcurrentLinkedQueue<>();
	private final Timer timer = new Timer();
    private boolean pause = false;
    
    @Override
    public void onUpdate() {
        if (timer.passedS(delay.getValue())) {
            timer.reset();
            pause = true;

            emptyQueue();

            pause = false;
        }
    }
    
    @EventHandler
    private final Listener<PacketEvent.Receive> packetReceiveListener = new Listener<>(event -> {
    	if(mc.world != null || mc.player != null) {
    		if (PacketEvent.getPacket() instanceof CPacketKeepAlive && !pause) {
                packets.add((CPacketKeepAlive) PacketEvent.getPacket());
                event.cancel();
    	}
    	
    }});
    
    private void emptyQueue() {
        while (!packets.isEmpty()) {
            CPacketKeepAlive packet = packets.poll();
            if (packet == null) {
                break;
            }

            mc.player.connection.sendPacket(packet);
        }
    }

}
